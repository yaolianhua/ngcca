apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hotcloud
  template:
    metadata:
      labels:
        k8s-app: hotcloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      containers:
        - image: harbor.local:7000/hotcloud/hotcloud:0.1.20211105115017
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /livez
              port: http
            periodSeconds: 120
            initialDelaySeconds: 180
          name: hotcloud
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 120
            periodSeconds: 60
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /hotcloud/config
              name: hotcloud-volume
              readOnly: true
            - mountPath: /root/.kube/config
              name: kubeconfig
              readOnly: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - configMap:
            name: hotcloud-config
            items:
              - key: config
                path: application.yml
          name: hotcloud-volume
        - hostPath:
            path: /root/.kube/config
          name: kubeconfig