apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{[RABBITMQ]}
  namespace: #{[NAMESPACE]}
  labels:
    app.business.data/id: #{[ ID ]}
spec:
  selector:
    matchLabels:
      app: #{[RABBITMQ]}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: #{[RABBITMQ]}
    spec:
      containers:
      - image: #{[RABBITMQ_IMAGE]}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "128Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        name: #{[RABBITMQ]}
        env:
        - name: RABBITMQ_DEFAULT_PASS
          value: #{[RABBITMQ_DEFAULT_PASSWORD]}
        - name: RABBITMQ_DEFAULT_USER
          value: #{[RABBITMQ_DEFAULT_USER]}
        ports:
        - containerPort: 5672
          name: #{[RABBITMQ]}
        - containerPort: 15672
          name: #{[RABBITMQ_MANAGEMENT]}
        volumeMounts:
        - name: rabbitmq-persistent-storage
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-persistent-storage
        emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: #{[RABBITMQ]}
  namespace: #{[NAMESPACE]}
spec:
  ports:
  - port: 5672
    protocol: TCP
    targetPort: 5672
    name: #{[RABBITMQ]}
  - port: 15672
    protocol: TCP
    targetPort: 15672
    name: #{[RABBITMQ_MANAGEMENT]}
  selector:
    app: #{[RABBITMQ]}
  type: NodePort
