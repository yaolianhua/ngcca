apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-#{[redisinsight]}-#{[namespace]}
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  claimRef:
    kind: PersistentVolumeClaim
    name: pvc-#{[redisinsight]}-#{[namespace]}
    namespace: #{[namespace]}
  hostPath:
    path: #{[nfs_path]}/#{[namespace]}/#{[redisinsight]}
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  storageClassName: #{[storage_class_application]}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-#{[redisinsight]}-#{[namespace]}
  namespace: #{[namespace]}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: pv-#{[redisinsight]}-#{[namespace]}
  storageClassName: #{[storage_class_application]}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{[redisinsight]}
  namespace: #{[namespace]}
  labels:
    app: #{[redisinsight]}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: #{[redisinsight]}
  template:
    metadata:
      labels:
        app: #{[redisinsight]}
    spec:
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: pvc-#{[redisinsight]}-#{[namespace]}
      initContainers:
        - name: init
          image: busybox
          command:
            - /bin/sh
            - '-c'
            - |
                            chown -R 1001 /db
          resources: {}
          volumeMounts:
            - name: db
              mountPath: /db
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      containers:
        - name:  #{[redisinsight]}
          image: #{[redisinsight_image]}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          volumeMounts:
          - name: db
            mountPath: /db
          ports:
          - containerPort: 8001
            protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: #{[redisinsight]}-service
  namespace: #{[namespace]}
spec:
  type: NodePort
  ports:
    - port: 8001
      targetPort: 8001
  selector:
    app: #{[redisinsight]}
