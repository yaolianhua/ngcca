apiVersion: batch/v1
kind: Job
metadata:
  annotations: { }
  labels:
    k8s-app: #{[ LABEL_NAME ]}
  name: #{[ JOB_NAME ]}
  namespace: #{[ NAMESPACE ]}
spec:
  activeDeadlineSeconds: 1800
  backoffLimit: 3
  template:
    metadata:
      annotations: { }
      labels:
        k8s-app: #{[ LABEL_NAME ]}
    spec:
      containers:
        - args:
            - --destination=#{[ DESTINATION ]}
            - --skip-tls-verify=true
            - --insecure=true
            - --context=/workspace
            - --skip-tls-verify-registry=true
            - --skip-tls-verify-pull=true
            - --no-push=false
            - --insecure-pull=true
            - --push-retry=3
            - --dockerfile=/workspace/Dockerfile
            - --log-format=color
            - --force=false
            - --verbosity=info
          image: #{[ KANIKO_IMAGE ]}
          imagePullPolicy: IfNotPresent
          name: #{[ KANIKO_CONTAINER_NAME ]}
          ports: [ ]
          volumeMounts:
            - mountPath: /kaniko/.docker
              name: docker-registry-secret
              readOnly: true
            - mountPath: /workspace
              name: workspace-volume
              readOnly: false
      dnsPolicy: ClusterFirst
      imagePullSecrets: [ ]
      initContainers:
        - image: #{[ INIT_CONTAINER_IMAGE ]}
          imagePullPolicy: IfNotPresent
          name: #{[ INIT_CONTAINER_NAME ]}
          command:
          - git
          - clone
          - --branch=#{[ GIT_BRANCH ]}
          - --depth=1
          - #{[ HTTP_GIT_URL ]}
          - /workspace
          - --verbose
          volumeMounts:
          - name: workspace-volume
            mountPath: /workspace
      restartPolicy: Never
      volumes:
        - name: docker-registry-secret
          secret:
            items:
              - key: .dockerconfigjson
                path: config.json
            optional: false
            secretName: #{[ SECRET_NAME ]}
        - name: workspace-volume
          emptyDir: { }
  ttlSecondsAfterFinished: 120