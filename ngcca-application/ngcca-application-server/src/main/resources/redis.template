apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{[REDIS]}
  namespace: #{[NAMESPACE]}
  labels:
    app.business.data/id: #{[ ID ]}
spec:
  selector:
    matchLabels:
      app: #{[REDIS]}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: #{[REDIS]}
    spec:
      containers:
      - image: #{[REDIS_IMAGE]}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "128Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        name: #{[REDIS]}
        command:
        - redis-server
        - "/redis-master/redis.conf"
        env:
        - name: MASTER
          value: "true"
        ports:
        - containerPort: 6379
          name: #{[REDIS]}
        volumeMounts:
        - mountPath: /redis-master
          name: config
        - name: redis-persistent-storage
          mountPath: /data
      volumes:
      - name: config
        configMap:
          name: #{[REDIS]}
          items:
          - key: redis-config
            path: redis.conf
      - name: redis-persistent-storage
        emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: #{[REDIS]}
  namespace: #{[NAMESPACE]}
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
    name: #{[REDIS]}
  selector:
    app: #{[REDIS]}
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #{[REDIS]}
  namespace: #{[NAMESPACE]}
data:
  redis-config: |
    requirepass #{[REDIS_PASSWORD]}
    bind 0.0.0.0
    pidfile "/var/run/redis_6379.pid"
    dbfilename "dump.rdb"
    dir "/data"
    appendonly yes
    appendfilename "appendonly.aof"
    aof-use-rdb-preamble yes
