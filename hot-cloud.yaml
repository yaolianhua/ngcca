apiVersion: v1
kind: Namespace
metadata:
  labels:
    k8s-app: hot-cloud
  name: hot-cloud
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: hot-cloud
  name: hot-cloud
  namespace: hot-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: hot-cloud
  name: hot-cloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: hot-cloud
    namespace: hot-cloud
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hot-cloud
  name: hot-cloud
  namespace: hot-cloud
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    k8s-app: hot-cloud
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hot-cloud
  name: hot-cloud
  namespace: hot-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hot-cloud
  template:
    metadata:
      labels:
        k8s-app: hot-cloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      containers:
        - image: yaolianhua/hotcloud:0.1.20211017223300
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/livez
              port: http
            periodSeconds: 10
            initialDelaySeconds: 60
          name: hot-cloud
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/readyz
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /hotcloud/config
              name: hot-cloud-volume
              readOnly: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: hot-cloud
      volumes:
        - configMap:
            name: hot-cloud-config
            items:
              - key: config
                path: application.yml
          name: hot-cloud-volume
---
apiVersion: v1
data:
  config: |
    logging:
      level:
        io.hotCloud.server: debug
    kubernetes:
      in-cluster: true
kind: ConfigMap
metadata:
  name: hot-cloud-config
  namespace: hot-cloud
