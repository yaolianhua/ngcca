apiVersion: v1
kind: Namespace
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: hotcloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: hotcloud
    namespace: hotcloud
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: hotcloud
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    k8s-app: hotcloud
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hotcloud-ingress
  namespace: hotcloud
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  rules:
    - host: api-hotcloud.yaolianhua.cn
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hotcloud
                port:
                  number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: hotcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hotcloud
  template:
    metadata:
      labels:
        k8s-app: hotcloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      containers:
        - image: yaolianhua/hotcloud
          imagePullPolicy: Always
          name: hotcloud
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /hotcloud/config
              name: hotcloud-volume
              readOnly: true
            - mountPath: /root/.kube/config
              name: kubeconfig
              readOnly: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: hotcloud
      volumes:
        - configMap:
            name: hotcloud-config
            items:
              - key: config
                path: application.yml
          name: hotcloud-volume
        - hostPath:
            path: /root/.kube/config
          name: kubeconfig
---
apiVersion: v1
data:
  config: |
    logging:
      level:
        io.hotcloud.kubernetes.server: debug
        io.hotcloud.buildpack.server: debug
        io.hotcloud.message: info
    kubernetes:
      in-cluster: true
      enable-workloads-watcher: true
    message:
      type: websocket
      rabbitmq:
        host:
        username:
        password:
        port:
    buildpack:
      kaniko:
        cache: false
        cache-dir:
        cache-repo:
        cache-ttl-duration: 168h
        compressed-caching: true
        cleanup: true
        context:
        context-sub-path:
        destination:
        digest-file:
        dockerfile: Dockerfile
        force: false
        image-fs-extract-retry: 3
        git:
        ignore-path:
        ignore-var-run: true
        image-name-tag-with-digest-file:
        image-name-with-digest-file:
        insecure: true
        insecure-pull: true
        insecure-registry:
        label:
        log-format: color
        log-timestamp: false
        no-push: false
        push-retry: 3
        registry-certificate:
        registry-mirror:
        reproducible: false
        single-snapshot: false
        skip-tls-verify: true
        skip-tls-verify-pull: true
        skip-tls-verify-registry: true
        skip-unused-stages: true
        snapshot-mode: full
        tar-path:
        target:
        use-new-run: true
        verbosity: debug
    security:
      enabled: true
kind: ConfigMap
metadata:
  name: hotcloud-config
  namespace: hotcloud
