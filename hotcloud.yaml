apiVersion: v1
kind: Namespace
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: hotcloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: hotcloud
    namespace: hotcloud
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: hotcloud
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    k8s-app: hotcloud
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hotcloud-ingress
  namespace: hotcloud
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  rules:
    - host: api-hotcloud.yaolianhua.cn
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hotcloud
                port:
                  number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hotcloud
  name: hotcloud
  namespace: hotcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hotcloud
  template:
    metadata:
      labels:
        k8s-app: hotcloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      containers:
        - image: yaolianhua/hotcloud
          imagePullPolicy: Always
          name: hotcloud
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /hotcloud/config
              name: hotcloud-volume
              readOnly: true
            - mountPath: /root/.kube/config
              name: kubeconfig
              readOnly: true
            - mountPath: /tmp/kaniko
              name: buildpack-storage
              readOnly: false
      tolerations:
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: hotcloud
      volumes:
        - configMap:
            name: hotcloud-config
            items:
              - key: config
                path: application.yml
          name: hotcloud-volume
        - hostPath:
            path: /root/.kube/config
          name: kubeconfig
        - nfs:
            server: 10.0.20.6
            path: /tmp/kaniko
          name: buildpack-storage
---
apiVersion: v1
data:
  config: |
    cache:
      type: redis
      redis:
        host: redis-release-master.middleware.svc.cluster.local
        port: 6379
        password: QbMufCD@9WVQ^Hv
        database: 10
    db:
      type: redis
      redis:
        database: 9
        host: redis-release-master.middleware.svc.cluster.local
        port: 6379
        password: QbMufCD@9WVQ^Hv
      mongodb:
          host: mongo-release-mongodb-headless.middleware.svc.cluster.local
          username: admin
          password: QbMufCD@9WVQ^Hv
          port: 27017
          database: hotcloud
    buildpack:
      storage:
        type: nfs
        nfs-server: 10.0.20.6
      registry:
        url: 10.0.20.6:5000
        project: build
        username: no-auth
        password: no-auth
kind: ConfigMap
metadata:
  name: hotcloud-config
  namespace: hotcloud
