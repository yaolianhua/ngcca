apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: hotcloud-web
  name: hotcloud-web
  namespace: hotcloud-system
spec:
  ports:
    - name: http
      port: 4000
      protocol: TCP
      targetPort: http
  selector:
    k8s-app: hotcloud-web
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-hotcloud$DOT_SUFFIX_DOMAIN
  namespace: hotcloud-system
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  rules:
    - host: web-hotcloud$DOT_SUFFIX_DOMAIN
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: hotcloud-web
                port:
                  number: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hotcloud-web
  name: hotcloud-web
  namespace: hotcloud-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hotcloud-web
  template:
    metadata:
      labels:
        k8s-app: hotcloud-web
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      containers:
        - image: $WEB_IMAGE
          imagePullPolicy: IfNotPresent
          name: hotcloud-web
          ports:
            - containerPort: 4000
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            privileged: true
          env:
            - name: HOTCLOUD_HOST
              value: "hotcloud"
            - name: HOTCLOUD_PORT
              value: "8080"
      tolerations:
        - effect: NoSchedule
          operator: Exists
