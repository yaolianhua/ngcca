apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: web-server
  name: web-server
  namespace: ngcca-system
spec:
  ports:
    - name: http
      port: 4000
      protocol: TCP
      targetPort: http
      nodePort: 31004
  selector:
    k8s-app: web-server
  type: NodePort
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-server
  namespace: ngcca-system
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  #  ingressClassName: nginx
  rules:
    - host: ngcca-web.linux
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: web-server
                port:
                  number: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: web-server
  name: web-server
  namespace: ngcca-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: web-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: web-server
    spec:
      #      hostAliases:
      #        - ip: 192.168.110.233
      #          hostnames:
      #            - harbor.linux-local
      #            - linux.local
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              weight: 1
      containers:
        - image: 119.91.214.25:5000/ngcca/web-server:2023.10.26.145631
          imagePullPolicy: IfNotPresent
          name: web-server
          ports:
            - containerPort: 4000
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /web-server/config
              name: web-server-config-volume
              readOnly: false
      volumes:
        - configMap:
            name: web-server-config
            items:
              - key: config
                path: application.yml
          name: web-server-config-volume
---
apiVersion: v1
data:
  config: |
    ngcca:
      redis:
        database: 0
        password: QbMufCD@9WVQ^Hv
        host: 120.78.225.168
        port: 6379
      registry:
        url: 119.91.214.25:5000
        username: admin
        password: "QbMufCD@9WVQ^Hv"
        imagebuild-namespace: image-build
      minio:
        access-key: admin
        secret-key: "QbMufCD@9WVQ^Hv"
        endpoint: "http://120.78.225.168:9009"
      mongodb:
        uri: "mongodb://admin:QbMufCD%409WVQ^Hv@120.78.225.168:27017/ngcca?authSource=admin"
      kubernetes-agent:
        endpoint: http://119.91.214.25:1400 
      web-server:
        endpoint: "http://ngcca-ui.linux"
      application:
        dot-suffix-domain: "ngcca.linux"
      security:
        ignored-urls:
          - "/**/login"
          - "/plugins/**"
          - "/js/**"
          - "/dist/**"
          - "/index"
          - "/**/logout"
          - "/administrator/**"
          - "/templates/**"
          - "/user/**"
          - "/"
        oauth2:
          github:
            client-id: "241c6168a7efeaf852ba"
            client-secret: "b3f98e25f25aa0807a0bc49c126178a11417e046"
          gitlab:
            client-id: "7a8680a3321f9ef21ce05f1746bb50a15ba8240818794f3e222af902043306d5"
            client-secret: "gloas-b962f886b24167b29f177d95d0fde8326c3ce45f3bb3e6b6650ee734a6905878"
            redirect-uri: "${ngcca.web-server.endpoint}/login/oauth2/code/gitlab"
    logging:
      level:
        io.hotcloud.common.log: info
        com.github.dockerjava.api.command: debug
        com.github.dockerjava.core.command: debug
kind: ConfigMap
metadata:
  name: web-server-config
  namespace: ngcca-system
