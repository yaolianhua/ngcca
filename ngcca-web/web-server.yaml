apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: web-server
  name: web-server
  namespace: ngcca-system
spec:
  ports:
    - name: http
      port: 4000
      protocol: TCP
      targetPort: http
  selector:
    k8s-app: web-server
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-server
  namespace: ngcca-system
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  rules:
    - host: web-server.linux.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: web-server
                port:
                  number: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: web-server
  name: web-server
  namespace: ngcca-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: web-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: web-server
    spec:
      hostAliases:
        - ip: 192.168.110.233
          hostnames:
            - harbor.linux-local
            - linux.local

      containers:
        - image: harbor.linux-local:5000/ngcca/web-server:2023.06.01.180516
          imagePullPolicy: IfNotPresent
          name: web-server
          ports:
            - containerPort: 4000
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /web-server/config
              name: web-server-config-volume
              readOnly: false
      volumes:
        - configMap:
            name: web-server-config
            items:
              - key: config
                path: application.yml
          name: web-server-config-volume
---
apiVersion: v1
data:
  config: |
    ngcca:
      redis:
        database: 1
        password: "QbMufCD@9WVQ^Hv"
        host: linux.local
        port: 6379
      registry:
        url: harbor.linux-local:5000
        username: admin
        password: "QbMufCD@9WVQ^Hv"
        imagebuild-namespace: image-build
      minio:
        access-key: admin
        secret-key: "QbMufCD@9WVQ^Hv"
        endpoint: "http://linux.local:9009"
      mongodb:
        uri: "mongodb://admin:QbMufCD%409WVQ^Hv@linux.local:27017/ngcca-test?authSource=admin"
      kubernetes-agent:
        host: k8s-agent
        port: 1400
        domain-name:
      buildpack:
        build-timeout-second: 1200
      application:
        deployment-timeout-second: 1200
        dot-suffix-domain: ".k8s.local"
      security:
        enabled: true
        ignored-defaults:
          - "/swagger**/**"
          - "/v3/api-docs/**"
          - "/favicon.ico"
          - "/pub"
          - "/**/login"
          - "/plugins/**"
          - "/js/**"
          - "/dist/**"
        ignored-urls:
          - "/index"
          - "/administrator/**"
          - "/template/**"
          - "/"
      openai:
        http-client-timeout-seconds: 60
        http-proxy:
          hostname: localhost
          port: 4000
        api-key: no-key
      docker:
        host: "tcp://linux.local:2375"
        pull-timeout-seconds: 300
        push-timeout-seconds: 300
      web-server:
        host: 
        port: 
        endpoint: http://web-server.linux.local
    server:
      port: 4000
    logging:
      level:
        io.hotcloud.common.log: debug
        com.github.dockerjava.api.command: debug
        com.github.dockerjava.core.command: debug
kind: ConfigMap
metadata:
  name: web-server-config
  namespace: ngcca-system
